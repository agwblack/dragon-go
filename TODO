# TODO list
#
# Implement all common commands
#   DownloadGame
#   Login
#   Status
#   QuickStatus
#   QuickPlay
# Need to get cookies working as part of this
#
# Parse output from commands and handle it in a meaningful way
#
# Think about exceptions - especially in the message class and the classes
# it owns.
#
# Create a User class and prompt user for login details
#
# Abstract away from messages so main just looks like:
#   login();
#   listAllGames();
#   checkForMoves();
#   displayGame();
# or something like that.
#
# Create classes for GamesList, Game, User - see notepad.
#
# Bring it to Android.
#
# Allow user to login, check status and set an option for 
# periodic status check with notifcations
#
# Get to work on UI (so we can view games and make moves).
# See notepad for more. Android Developer Design site is a gold mine.
#
# Create a board class. This is a visual element, distinct from a game
# (although its appearance will be driven by a game). Perhaps each game owns a
# board?
#
# Create artwork - board, stones, icons (see Android Design site for a full
# list of things we need to draw).
#
# Look at creating a widget
#
# Look to implement other features not present in anDGS, e.g.
#   Viewing all available games
#   Joining games
#   Creating games
#   Scoring at the end
#   etc.
